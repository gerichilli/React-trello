{"version":3,"sources":["utils.js","components/Tag.js","components/Card.js","components/Button.js","components/Form.js","components/Popover.js","hooks.js","components/CardEditor.js","components/Menu.js","components/CardsList.js","data.js","components/Board.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["_getNextNumber","cards","nextNumber","id","number","_generateId","shortid","generate","Tag","props","text","className","Card","tags","map","tag","index","cardRef","useRef","handleClick","cardRect","current","getBoundingClientRect","cardPosition","top","left","onEditCard","description","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","onClick","placeholder","Button","addList","addCard","success","editor","variant","onButtonClick","icon","Form","handleOnChangeText","event","isSubmit","target","value","setState","handleOnSubmit","preventDefault","state","onClickSubmit","onClickCancel","handleOnKeyDown","keyCode","renderFormControl","type","controlRef","onChange","formRef","React","createRef","this","focus","onSubmit","onKeyDown","buttonText","Component","defaultProps","initialValue","Popover","title","children","onClickOutside","offset","popover","node","useCallback","e","contains","useEffect","document","addEventListener","removeEventListener","useClickOutsideEffect","style","marginTop","marginLeft","CardEditor","isTagEditOpen","isCloseEditor","handleOpenTagsEdit","bind","handleCloseTagsEdit","handleClickOutside","closest","onCancelEdit","labels","onRemoveTag","display","flexDirection","position","onSaveCard","onAddTag","onCopyCard","onArchiveCard","Menu","actions","actionsGroup","action","toggleMenu","isOpen","CardsList","creatingNewCard","editCardId","editCardText","editCardTags","editorPosition","handleCreateNewCard","onCopyList","onMoveAllCards","onRemoveAllCards","onRemoveList","handleAddNewCard","handleCancelNewCard","handleEditCard","handleCancelEdit","handleCopyCard","handleArchiveCard","handleSaveCard","handleRemoveTag","handleAddTag","cardText","onAddCard","onRemoveCard","tagId","filter","_","numberOfCards","length","isMenuOpen","onToggleMenu","card","droppableId","direction","droppableProps","renderHeader","renderCards","renderFooter","data","lists","cardIds","listOrder","Board","newListText","creatingNewList","openMenuId","handleCreateList","handleCancelCreateList","handleAddList","handleRemoveList","handleAddCard","handleRemoveCard","handleRemoveAllCards","handleCopyList","handleMoveAllCards","handleToggleMenu","handleDragEnd","newListID","listId","updateCards","Object","assign","updateLists","forEach","cardId","listOr","newCardID","newCardId","cloneCardId","cloneCards","newListId","keys","destination","source","list","splice","start","end","newCardIds","newList","newState","startCardIds","newStart","endCardIds","newEnd","cardsLists","cardList","listData","listCards","onDragEnd","renderLists","renderNewList","Header","Footer","href","App","ReactDOM","render","getElementById"],"mappings":"4SAOaA,EAAiB,WAAmB,IAAlBC,EAAiB,uDAAT,KACjCC,GAAc,EAClB,IAAK,IAAMC,KAAMF,EACXA,EAAME,GAAIC,OAASF,IACrBA,EAAaD,EAAME,GAAIC,QAG3B,OAAOF,EAAa,GAOTG,EAAc,kBAAMC,IAAQC,Y,sBCH1BC,EAfH,SAACC,GACX,OAAIA,EAAMC,KAGN,sBAAMC,UAAU,MAAhB,SACGF,EAAMC,OAJU,MC0CVE,EAvCF,SAACH,GACZ,IAAMI,EAAOJ,EAAMI,KAAKC,KAAI,SAACC,EAAKC,GAAN,OAAe,cAAC,EAAD,CAAKN,KAAMK,GAAX,UAAwBA,EAAxB,YAA+BC,OAEpEC,EAAUC,iBAAO,MAEjBC,EAAc,WAClB,IAAMC,EAAWH,EAAQI,QAAQC,wBAC3BC,EAAe,CAACC,IAAKJ,EAASI,IAAKC,KAAML,EAASK,MACxDhB,EAAMiB,WAAWjB,EAAMN,GAAIM,EAAMkB,YAAalB,EAAMI,KAAMU,IAG5D,OACE,cAAC,IAAD,CAAWK,YAAanB,EAAMN,GAAIa,MAAOP,EAAMO,MAA/C,SACG,SAAAa,GAAQ,OACT,2DACIA,EAASC,gBACTD,EAASE,iBAFb,IAGAC,IAAKH,EAASI,SAHd,UAKE,sBAAKtB,UAAU,OAAOqB,IAAKf,EAASiB,QAASf,EAA7C,UACE,8BAAMN,IACN,oCAAOJ,EAAML,OAAb,IAAsBK,EAAMkB,kBAE7BE,EAASM,oB,QCDHC,EA1BA,SAAC3B,GAQd,OACE,yBACAE,UATkB,CAClB0B,QAAS,aACTC,QAAS,6BACTC,QAAS,kBACTC,OAAQ,kBAKe/B,EAAMgC,SAC7BP,QAASzB,EAAMiC,cAFf,UAIGjC,EAAMkC,MAAQ,GACf,+BAAOlC,EAAMC,WCVbkC,E,kDACJ,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IAiBRoC,mBAAqB,SAACC,GACpB,IAAMC,EAAkC,KAAvBD,EAAME,OAAOC,MAE9B,EAAKC,SAAS,CACZD,MAAOH,EAAME,OAAOC,MACpBF,SAAUA,KAvBK,EA2BnBI,eAAiB,SAACL,GAChBA,EAAMM,iBACF,EAAKC,MAAMN,WAEf,EAAKtC,MAAM6C,cAAc,EAAKD,MAAMJ,OACpC,EAAKC,SAAS,CAAED,MAAO,GAAKF,UAAU,IACtC,EAAKtC,MAAM8C,eAAiB,EAAK9C,MAAM8C,kBAjCtB,EAoCnBC,gBAAkB,SAACV,GACI,KAAlBA,EAAMW,SAAgB,EAAKN,eAAeL,IArC5B,EAwCnBY,kBAAoB,WAClB,MAAuB,SAApB,EAAKjD,MAAMkD,MAAuC,WAApB,EAAKlD,MAAMkD,KAExC,0BACAhD,UAAU,gBACVqB,IAAK,EAAK4B,WACVzB,YAAa,EAAK1B,MAAM0B,YACxBc,MAAO,EAAKI,MAAMJ,MAClBY,SAAU,EAAKhB,qBAKS,SAApB,EAAKpC,MAAMkD,MAAuC,WAApB,EAAKlD,MAAMkD,KAE7C,uBACAhD,UAAU,aACVqB,IAAK,EAAK4B,WACVzB,YAAa,EAAK1B,MAAM0B,YACxBc,MAAO,EAAKI,MAAMJ,MAClBY,SAAU,EAAKhB,0BAPd,GAjDL,EAAKiB,QAAUC,IAAMC,YACrB,EAAKJ,WAAaG,IAAMC,YAGxB,EAAKX,MAAQ,CACXJ,MAAO,EAAKxC,MAAMwC,OAAS,GAC3BF,UAAU,GAVK,E,qDAcnB,WACEkB,KAAKL,WAAWvC,QAAQ6C,U,oBAoD1B,WACE,OACE,uBACElC,IAAKiC,KAAKH,QACVnD,UAAS,oBAAesD,KAAKxD,MAAMkD,MACnCQ,SAAUF,KAAKd,eACfiB,UAAWH,KAAKT,gBAJlB,UAMGS,KAAKP,oBACN,sBAAK/C,UAAU,eAAf,UACE,cAAC,EAAD,CACA8B,QAASwB,KAAKxD,MAAMgC,QACpB/B,KAAMuD,KAAKxD,MAAM4D,WACjB3B,cAAeuB,KAAKd,iBAEnBc,KAAKxD,MAAM8C,eACZ,cAAC,IAAD,CACA5C,UAAU,qBACVuB,QAAS+B,KAAKxD,MAAM8C,0B,GAtFXe,aA+FnB1B,EAAK2B,aAAe,CAClBC,aAAc,GACdrC,YAAa,GACbkC,WAAY,GACZf,cAAe,kBAAM,MACrBC,cAAe,kBAAM,OAYRX,QCnHf,IA0Ce6B,EA1CC,SAAC,GAA8E,IAAD,QAA3EC,aAA2E,MAAnE,GAAmE,MAA/DC,gBAA+D,MAApD,KAAoD,MAA9CC,sBAA8C,MAA7B,kBAAM,MAAuB,MAAjBC,cAAiB,MAAR,GAAQ,EACtFC,EAAU5D,iBAAO,MAIvB,OCPK,SAA+B6D,EAAMH,GAC1C,IAAMzD,EAAc6D,uBAAY,SAACC,GAAO,IAAD,GACjC,OAACF,QAAD,IAACA,GAAD,UAACA,EAAM1D,eAAP,aAAC,EAAe6D,SAASD,EAAEjC,UAAsC,oBAApB4B,GAC/CA,MAED,CAACG,EAAMH,IAEVO,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,YAAalE,GAEhC,WACLiE,SAASE,oBAAoB,YAAanE,MAE3C,CAACA,IDRJoE,CAAsBT,EAASF,GAG7B,sBACE5C,IAAK8C,EACLnE,UAAU,UACV6E,MAAO,CACLC,UAAU,GAAD,wBAAKZ,QAAL,IAAKA,OAAL,EAAKA,EAAQrD,WAAb,QAAoB,EAApB,MACTkE,WAAW,GAAD,wBAAKb,QAAL,IAAKA,OAAL,EAAKA,EAAQpD,YAAb,QAAqB,EAArB,OALd,UASIiD,EACE,qCACE,qBAAK/D,UAAU,iBAAf,SACE,6BAAK+D,MAEP,oBAAI/D,UAAU,eAEd,KAELgE,MEbDgB,E,kDACJ,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IAGD4C,MAAQ,CACXuC,eAAe,EACfC,eAAe,GAGjB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAXT,E,sDAcnB,WACE9B,KAAKf,SAAS,CACZ0C,eAAe,EACfC,eAAe,M,iCAInB,WACE5B,KAAKf,SAAS,CACZ0C,eAAe,EACfC,eAAe,M,gCAInB,SAAmBZ,IACbA,EAAEjC,OAAOkD,QAAQ,iBAAmBjC,KAAKZ,MAAMwC,eAAe5B,KAAKxD,MAAM0F,eAC7ElC,KAAKf,SAAS,CAAC2C,eAAe,M,oBAIhC,WAAU,IAAD,mBACDO,EAASnC,KAAKxD,MAAMI,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACjC,qBACAL,UAAU,QAEVuB,QAAS,kBAAM,EAAKzB,MAAM4F,YAAYrF,IAHtC,UAKE,cAAC,IAAD,IACA,4BAAID,MANN,UAEQA,GAFR,OAEcC,OAQhB,OACE,qBAAKL,UAAU,eAAeuB,QAAS+B,KAAKgC,mBAA5C,SACE,sBACET,MAAO,CACLc,QAAS,OACTC,cAAe,MACfC,SAAU,WACVhF,IAAI,GAAD,2BAAKyC,KAAKxD,aAAV,iBAAK,EAAY+F,gBAAjB,aAAK,EAAsBhF,WAA3B,QAAkC,EAAlC,MACHC,KAAK,GAAD,2BAAKwC,KAAKxD,aAAV,iBAAK,EAAY+F,gBAAjB,aAAK,EAAsB/E,YAA3B,QAAmC,EAAnC,OAGNd,UAAU,cATZ,UAWE,qBACA6E,MAAO,CACLc,QAAS,OACTC,cAAe,UAHjB,SAOE,cAAC,EAAD,CACE5C,KAAK,SACLU,WAAW,OACX5B,QAAQ,UACRQ,MAAOgB,KAAKxD,MAAMC,KAClB6C,cAAe,KACfD,cAAeW,KAAKxD,MAAMgG,eAI9B,qBAAI9F,UAAU,iBAAd,UACE,qBAAIA,UAAU,gBAAd,UACE,cAAC,EAAD,CACE8B,QAAQ,SACRE,KAAM,cAAC,IAAD,IACNjC,KAAM,cACNgC,cAAeuB,KAAK6B,qBAIpB7B,KAAKZ,MAAMuC,eACX,eAAC,EAAD,CACElB,MAAM,SACNE,eAAgBX,KAAK+B,oBACrBnB,OAAQ,CAACrD,KAAM,GAAIC,KAAM,GAH3B,UAME,oBAAId,UAAU,SAAd,SACGyF,IAEH,oBAAIzF,UAAU,kBAAd,6BACA,cAAC,EAAD,CACEgD,KAAK,SACLU,WAAW,MACX5B,QAAQ,UACRN,YAAY,iCACZmB,cAAeW,KAAKxD,MAAMiG,SAC1BnD,cAAe,aAKvB,oBAAI5C,UAAU,gBAAd,SACE,cAAC,EAAD,CACE8B,QAAQ,SACRE,KAAM,cAAC,IAAD,IACNjC,KAAM,OACNgC,cAAeuB,KAAKxD,MAAMkG,eAG9B,oBAAIhG,UAAU,gBAAd,SACE,cAAC,EAAD,CACE8B,QAAQ,SACRE,KAAM,cAAC,IAAD,IACNjC,KAAM,UACNgC,cAAeuB,KAAKxD,MAAMmG,8B,GA1HjBtC,aAoIzBqB,EAAWpB,aAAe,CACxBC,aAAc,GACd3D,KAAM,GACN2F,SAAU,KACVC,WAAY,kBAAM,MAClBJ,YAAa,kBAAM,MACnBK,SAAU,kBAAM,MAChBC,WAAY,kBAAM,MAClBC,cAAe,kBAAM,OAiBRjB,QC3GAkB,EA1DF,SAACpG,GACZ,IAAMqG,EAAUrG,EAAMqG,QAAQhG,KAAI,SAACiG,EAAc/F,GAC/C,OACE,gCACI,oBAAIL,UAAU,eAAd,SACGoG,EAAajG,KAAI,SAAAkG,GAAM,OACtB,oBACArG,UAAU,cAEVuB,QAAS8E,EAAO9E,QAHhB,SAKE,4BAAI8E,EAAOtC,SAHRsC,EAAOtC,YAOhB,oBAAI/D,UAAU,cAZRK,MAiBRiG,EAAa,WACjBxG,EAAMyB,QAAQzB,EAAMN,KAGtB,OACE,sBAAKQ,UAAU,OAAf,UACE,cAAC,IAAD,CACEuB,QAAS+E,IAGTxG,EAAMyG,OACJ,mCACE,cAAC,EAAD,CACAxC,MAAM,eACNE,eAAgBqC,EAFhB,SAIGH,MAGH,SClCNK,E,kDACJ,WAAY1G,GAAQ,IAAD,8BACjB,cAAMA,IAGD4C,MAAQ,CACX+D,iBAAiB,EACjBC,WAAY,KACZC,aAAc,GACdC,aAAc,GACdC,eAAgB,CAAChG,IAAK,KAAMC,KAAM,OAIpC,EAAKqF,QAAU,CACb,CACE,CACEpC,MAAO,cACPxC,QAAS,WAAO,EAAKuF,wBAEvB,CACE/C,MAAO,eACPxC,QAAS,WAAO,EAAKzB,MAAMiH,WAAW,EAAKjH,MAAMN,OAGrD,CACE,CACEuE,MAAO,iCACPxC,QAAS,WAAO,EAAKzB,MAAMkH,eAAe,EAAKlH,MAAMN,MAEvD,CACEuE,MAAO,oCACPxC,QAAS,WAAO,EAAKzB,MAAMmH,iBAAiB,EAAKnH,MAAMN,OAG3D,CACE,CACEuE,MAAO,oBACPxC,QAAS,WAAO,EAAKzB,MAAMoH,aAAa,EAAKpH,MAAMN,QAKzD,EAAK2H,iBAAmB,EAAKA,iBAAiB/B,KAAtB,gBACxB,EAAKgC,oBAAsB,EAAKA,oBAAoBhC,KAAzB,gBAC3B,EAAK0B,oBAAsB,EAAKA,oBAAoB1B,KAAzB,gBAC3B,EAAKiC,eAAiB,EAAKA,eAAejC,KAApB,gBACtB,EAAKkC,iBAAmB,EAAKA,iBAAiBlC,KAAtB,gBACxB,EAAKmC,eAAiB,EAAKA,eAAenC,KAApB,gBACtB,EAAKoC,kBAAoB,EAAKA,kBAAkBpC,KAAvB,gBACzB,EAAKqC,eAAiB,EAAKA,eAAerC,KAApB,gBACtB,EAAKsC,gBAAkB,EAAKA,gBAAgBtC,KAArB,gBACvB,EAAKuC,aAAe,EAAKA,aAAavC,KAAlB,gBAnDH,E,oDAsDnB,WAAiC,IAAhBwC,EAAe,uDAAJ,GAC1BtE,KAAKxD,MAAM+H,UAAUvE,KAAKxD,MAAMN,GAAIoI,GACpCtE,KAAKf,SAAS,CAAEkE,iBAAiB,M,iCAGnC,WACEnD,KAAKf,SAAS,CAAEkE,iBAAiB,M,iCAGnC,WACEnD,KAAKf,SAAS,CAAEkE,iBAAiB,M,4BAGnC,SAAejH,EAAIO,EAAMG,EAAM2F,GAC7BvC,KAAKf,SAAS,CACZmE,WAAYlH,EACZmH,aAAc5G,EACd6G,aAAc1G,EACd2G,eAAgBhB,M,8BAIpB,WACEvC,KAAKf,SAAS,CACZmE,WAAY,KACZC,aAAc,GACdC,aAAc,O,4BAIlB,WACEtD,KAAKxD,MAAMkG,WAAW1C,KAAKxD,MAAMN,GAAI8D,KAAKZ,MAAMgE,YAChDpD,KAAKf,SAAS,CAACmE,WAAY,S,+BAG7B,WACEpD,KAAKxD,MAAMgI,aAAaxE,KAAKxD,MAAMN,GAAI8D,KAAKZ,MAAMgE,YAClDpD,KAAKgE,qB,4BAGP,SAAevH,GACbuD,KAAKxD,MAAMiB,WAAWuC,KAAKZ,MAAMgE,WAAY3G,GAC7CuD,KAAKf,SAAS,CAACmE,WAAY,S,6BAG7B,SAAgBqB,GACdzE,KAAKxD,MAAM4F,YAAYpC,KAAKZ,MAAMgE,WAAYqB,GAC9CzE,KAAKf,SAAS,CACZqE,aAActD,KAAKZ,MAAMkE,aAAaoB,QAAO,SAACC,EAAG5H,GAAJ,OAAcA,IAAU0H,S,0BAIzE,SAAahI,GACXuD,KAAKf,SAAS,CAAEqE,aAAa,GAAD,mBAAMtD,KAAKZ,MAAMkE,cAAjB,CAA+B7G,MAC3DuD,KAAKxD,MAAMiG,SAASzC,KAAKZ,MAAMgE,WAAY3G,K,0BAG7C,WACE,IAAMmI,EAAgB5E,KAAKxD,MAAMR,MAAM6I,OAEvC,OACE,sBAAKnI,UAAU,oBAAf,UACE,sBAAKA,UAAU,mBAAf,UAEE,6BAAKsD,KAAKxD,MAAMiE,QAEhB,cAAC,EAAD,CACAvE,GAAI8D,KAAKxD,MAAMN,GACf2G,QAAS7C,KAAK6C,QACdI,OAAQjD,KAAKxD,MAAMsI,WACnB7G,QAAS+B,KAAKxD,MAAMuI,kBAItB,8BAAIH,EAAJ,IAAsC,IAAlBA,EAAsB,OAAS,gB,yBAKzD,WAAe,IAAD,OACN5I,EAAQgE,KAAKxD,MAAMR,MAAMa,KAAI,SAACmI,EAAMjI,GACxC,OACE,cAAC,EAAD,CAEAb,GAAI8I,EAAK9I,GACTa,MAAOA,EACPZ,OAAQ6I,EAAK7I,OACbuB,YAAasH,EAAKtH,YAClBd,KAAMoI,EAAKpI,KACXa,WAAY,EAAKsG,gBANZiB,EAAK9I,OAUd,OACE,cAAC,IAAD,CACA+I,YAAajF,KAAKxD,MAAMN,GACxBgJ,UAAW,WACXxF,KAAM,OAHN,SAKG,SAAA9B,GAAQ,OACT,6CAAIlB,UAAU,QACdqB,IAAKH,EAASI,UACVJ,EAASuH,gBAFb,cAIGnJ,EACA4B,EAASM,qB,0BAQlB,WACE,OAAG8B,KAAKZ,MAAM+D,gBAEV,cAAC,EAAD,CACAzD,KAAK,OACLU,WAAW,WACX5B,QAAQ,UACRN,YAAY,8BACZoB,cAAeU,KAAK8D,oBACpBzE,cAAeW,KAAK6D,mBAKpB,cAAC,EAAD,CACEnF,KAAM,cAAC,IAAD,IACNF,QAAQ,UACR/B,KAAK,iBACLgC,cAAeuB,KAAKwD,wB,oBAM5B,WAAU,IAAD,OACP,OACE,cAAC,IAAD,CAAW7F,YAAaqC,KAAKxD,MAAMN,GAAIa,MAAOiD,KAAKxD,MAAMO,MAAzD,SACG,SAACa,GAAD,OACD,2DACIA,EAASC,gBACTD,EAASE,iBAFb,IAGAC,IAAKH,EAASI,SAHd,UAKE,sBAAKtB,UAAU,aAAf,UACI,EAAK0I,eACL,EAAKC,cACL,EAAKC,eAEL,EAAKlG,MAAMgE,YACb,cAAC,EAAD,CACA3G,KAAM,EAAK2C,MAAMiE,aACjBzG,KAAM,EAAKwC,MAAMkE,aACjBf,SAAU,EAAKnD,MAAMmE,eACrBrB,aAAc,EAAK8B,iBACnBrB,cAAe,EAAKuB,kBACpBxB,WAAY,EAAKuB,eACjBzB,WAAY,EAAK2B,eACjB1B,SAAU,EAAK4B,aACfjC,YAAa,EAAKgC,qBAInBxG,EAASM,uB,GA5NImC,aAqOxB6C,EAAU5C,aAAe,CACvBtE,MAAO,KACP8I,YAAY,EACZC,aAAc,kBAAM,MACpBR,UAAW,kBAAM,MACjBC,aAAc,kBAAM,MACpBZ,aAAc,kBAAM,MACpBD,iBAAkB,kBAAM,MACxBF,WAAY,kBAAM,MAClBC,eAAgB,kBAAM,MACtBhB,WAAY,kBAAM,MAClBjF,WAAY,kBAAM,MAClB2E,YAAa,kBAAM,MACnBK,SAAU,kBAAM,OA6BHS,QC1NAqC,EAjEF,CACXvJ,MAAO,CACL,UAAa,CACXE,GAAI,YACJC,OAAQ,EACRuB,YAAa,mCACbd,KAAM,CAAC,mBAAoB,UAE7B,YAAa,CACXV,GAAI,YACJC,OAAQ,EACRuB,YAAa,oBACbd,KAAM,CAAC,QAAS,UAElB,UAAa,CACXV,GAAI,YACJC,OAAQ,EACRuB,YAAa,4CACbd,KAAM,CAAC,gBAAiB,wBAE1B,UAAa,CACXV,GAAI,YACJC,OAAQ,EACRuB,YAAa,cACbd,KAAM,CAAC,iBAAkB,UAE3B,UAAa,CACXV,GAAI,YACJC,OAAQ,EACRuB,YAAa,iCACbd,KAAM,CAAC,qBAET,UAAa,CACXV,GAAI,YACJC,OAAQ,EACRuB,YAAa,mBACbd,KAAM,CAAC,mBAAoB,qBAE7B,UAAa,CACXV,GAAI,YACJC,OAAQ,EACRuB,YAAa,iCACbd,KAAM,CAAC,sBAGX4I,MAAO,CACL,UAAa,CACXtJ,GAAI,YACJuE,MAAO,kBACPgF,QAAS,CAAC,YAAa,YAAa,cAEtC,YAAa,CACXvJ,GAAI,YACJuE,MAAO,mBACPgF,QAAS,CAAC,YAAa,cAEzB,UAAa,CACXvJ,GAAI,YACJuE,MAAO,OACPgF,QAAS,CAAC,YAAa,eAG3BC,UAAW,CAAC,YAAa,YAAa,cC+VzBC,E,kDA/Yb,WAAYnJ,GAAQ,IAAD,8BACjB,cAAMA,IAED4C,MAAQ,CACXoG,MAAO,GACPxJ,MAAO,GACP0J,UAAW,GACXE,YAAa,GACbC,iBAAiB,EACjBC,WAAY,MAGd,EAAK9I,QAAU8C,IAAMC,YAErB,EAAKgG,iBAAmB,EAAKA,iBAAiBjE,KAAtB,gBACxB,EAAKkE,uBAAyB,EAAKA,uBAAuBlE,KAA5B,gBAC9B,EAAKmE,cAAgB,EAAKA,cAAcnE,KAAnB,gBACrB,EAAKoE,iBAAmB,EAAKA,iBAAiBpE,KAAtB,gBACxB,EAAKqE,cAAgB,EAAKA,cAAcrE,KAAnB,gBACrB,EAAKsE,iBAAmB,EAAKA,iBAAiBtE,KAAtB,gBACxB,EAAKuE,qBAAuB,EAAKA,qBAAqBvE,KAA1B,gBAC5B,EAAKmC,eAAiB,EAAKA,eAAenC,KAApB,gBACtB,EAAKwE,eAAiB,EAAKA,eAAexE,KAApB,gBACtB,EAAKyE,mBAAqB,EAAKA,mBAAmBzE,KAAxB,gBAC1B,EAAK0E,iBAAmB,EAAKA,iBAAiB1E,KAAtB,gBACxB,EAAKiC,eAAiB,EAAKA,eAAejC,KAApB,gBACtB,EAAKsC,gBAAkB,EAAKA,gBAAgBtC,KAArB,gBACvB,EAAKuC,aAAe,EAAKA,aAAavC,KAAlB,gBACpB,EAAK2E,cAAgB,EAAKA,cAAc3E,KAAnB,gBA5BJ,E,qDA+BnB,WACE9B,KAAKf,SAAU,CACbuG,MAAOD,EAAKC,MACZxJ,MAAOuJ,EAAKvJ,MACZ0J,UAAWH,EAAKG,c,8BAIpB,WACE1F,KAAKf,SAAS,CAAE4G,iBAAiB,M,oCAGnC,WACE7F,KAAKf,SAAS,CAAE4G,iBAAiB,M,2BAGnC,WAA2B,IAAbpF,EAAY,uDAAJ,GACpB,GAAIA,EAAJ,CAEA,IAAMiG,EAAYtK,IAElB4D,KAAKf,SAAS,CACZuG,MAAM,2BACDxF,KAAKZ,MAAMoG,OADX,kBAEFkB,EAAY,CACXxK,GAAIwK,EACJjG,MAAOA,EACPgF,QAAS,MAGbC,UAAU,GAAD,mBAAM1F,KAAKZ,MAAMsG,WAAjB,CAA4BgB,IACrCd,YAAa,GACbC,iBAAiB,O,8BAIrB,SAAiBc,GACf,IAAMC,EAAcC,OAAOC,OAAO,GAAI9G,KAAKZ,MAAMpD,OAC3C+K,EAAcF,OAAOC,OAAO,GAAI9G,KAAKZ,MAAMoG,OAGjDxF,KAAKZ,MAAMoG,MAAMmB,GAAQlB,QAAQuB,SAAQ,SAAAC,GAAM,cAAWL,EAAYK,aAE/DF,EAAYJ,GAEnB3G,KAAKf,SAAS,CACZuG,MAAOuB,EACP/K,MAAO4K,EACPlB,UAAW1F,KAAKZ,MAAMsG,UAAUhB,QAAO,SAAAwC,GAAM,OAAIA,IAAWP,S,2BAIhE,SAAcA,GAA0B,IAAlBjJ,EAAiB,uDAAH,GAClC,GAAIA,EAAJ,CAEA,IAAMyJ,EAAY/K,IAElB4D,KAAKf,SAAS,CACZuG,MAAM,2BACDxF,KAAKZ,MAAMoG,OADX,kBAEFmB,EAFE,2BAGE3G,KAAKZ,MAAMoG,MAAMmB,IAHnB,IAIDlB,QAAQ,GAAD,mBAAMzF,KAAKZ,MAAMoG,MAAMmB,GAAQlB,SAA/B,CAAwC0B,QAGnDnL,MAAM,2BACDgE,KAAKZ,MAAMpD,OADX,kBAEFmL,EAAY,CACXjL,GAAIiL,EACJhL,OAAQJ,EAAeiE,KAAKZ,MAAMpD,OAClC0B,YAAaA,EACbd,KAAM,W,8BAMd,SAAiB+J,EAAQM,GAEvB,IAAML,EAAcC,OAAOC,OAAO,GAAI9G,KAAKZ,MAAMpD,cAC1C4K,EAAYK,GAGnBjH,KAAKf,SAAS,CACZuG,MAAM,2BACDxF,KAAKZ,MAAMoG,OADX,kBAEFmB,EAFE,2BAGE3G,KAAKZ,MAAMoG,MAAMmB,IAHnB,IAIDlB,QAASzF,KAAKZ,MAAMoG,MAAMmB,GAAQlB,QAAQf,QAAO,SAAAM,GAAI,OAAIA,IAASiC,SAGtEjL,MAAO4K,M,kCAIX,SAAqBD,GACnB,IAAMC,EAAcC,OAAOC,OAAO,GAAI9G,KAAKZ,MAAMpD,OACjDgE,KAAKZ,MAAMoG,MAAMmB,GAAQlB,QAAQuB,SAAQ,SAAAC,GAAM,cAAWL,EAAYK,MAEtEjH,KAAKf,SAAS,CACZuG,MAAM,2BACDxF,KAAKZ,MAAMoG,OADX,kBAEFmB,EAFE,2BAGE3G,KAAKZ,MAAMoG,MAAMmB,IAHnB,IAIDlB,QAAS,OAGbzJ,MAAO4K,EACPd,WAAY,S,4BAKhB,SAAea,EAAQM,GACrB,IAAMG,EAAYhL,IAElB4D,KAAKf,SAAS,CACZuG,MAAM,2BACDxF,KAAKZ,MAAMoG,OADX,kBAEFmB,EAFE,2BAGE3G,KAAKZ,MAAMoG,MAAMmB,IAHnB,IAIDlB,QAAQ,GAAD,mBAAMzF,KAAKZ,MAAMoG,MAAMmB,GAAQlB,SAA/B,CAAwC2B,QAGnDpL,MAAM,2BACDgE,KAAKZ,MAAMpD,OADX,kBAEFoL,EAFE,2BAGEpH,KAAKZ,MAAMpD,MAAMiL,IAHnB,IAID/K,GAAIkL,EACJjL,OAAQJ,EAAeiE,KAAKZ,MAAMpD,e,4BAM1C,SAAe2K,GAAS,IAAD,SAEA3G,KAAKZ,MAAMoG,MAAMmB,GAAQlB,QAAQ5I,KAAI,SAAAoK,GACxD,IAAMI,EAAcjL,IAIpB,OAAO,eAAEiL,EAAT,2BACK,EAAKjI,MAAMpD,MAAMiL,IADtB,IAEE/K,GAAImL,EACJlL,OAAQJ,EAAe,EAAKqD,MAAMpD,aAR/BsL,EAFc,oBAefC,EAAYnL,IAElB4D,KAAKf,SAAS,CACZuG,MAAM,2BACDxF,KAAKZ,MAAMoG,OADX,kBAEF+B,EAFE,2BAGEvH,KAAKZ,MAAMoG,MAAMmB,IAHnB,IAIDzK,GAAIqL,EACJ9G,MAAM,UAAD,OAAYT,KAAKZ,MAAMoG,MAAMmB,GAAQlG,OAC1CgF,QAASoB,OAAOW,KAAKF,OAGzBtL,MAAM,2BAAKgE,KAAKZ,MAAMpD,OAAUsL,GAChC5B,UAAU,GAAD,mBAAM1F,KAAKZ,MAAMsG,WAAjB,CAA4B6B,IACrCzB,WAAY,S,gCAIhB,SAAmBa,GACjB,IAAMI,EAAcF,OAAOC,OAAO,GAAI9G,KAAKZ,MAAMoG,OAEjD,IAAK,IAAMtJ,KAAM6K,EACIA,EAAY7K,GAAIuJ,QAA/BvJ,IAAOyK,EAAkCE,OAAOW,KAAKxH,KAAKZ,MAAMpD,OACrC,GAGjCgE,KAAKf,SAAS,CACZuG,MAAOuB,EACPjB,WAAY,S,8BAIhB,SAAiBa,GACZ3G,KAAKZ,MAAM0G,aAAea,GAAQ3G,KAAKf,SAAS,CAAE6G,WAAYa,IAC9D3G,KAAKZ,MAAM0G,aAAea,GAAQ3G,KAAKf,SAAS,CAAE6G,WAAY,S,4BAGnE,SAAemB,GAA2B,IAAnBvJ,EAAkB,uDAAJ,GACnCsC,KAAKf,SAAS,CACZjD,MAAM,2BACDgE,KAAKZ,MAAMpD,OADX,kBAEFiL,EAFE,2BAGEjH,KAAKZ,MAAMpD,MAAMiL,IAHnB,IAIDvJ,YAAaA,U,6BAMrB,SAAgBuJ,EAAQxC,GACtBzE,KAAKf,SAAS,CACZjD,MAAM,2BACDgE,KAAKZ,MAAMpD,OADX,kBAEFiL,EAFE,2BAGEjH,KAAKZ,MAAMpD,MAAMiL,IAHnB,IAIDrK,KAAMoD,KAAKZ,MAAMpD,MAAMiL,GAAQrK,KAAK8H,QAAO,SAACC,EAAG5H,GAAJ,OAAcA,IAAU0H,a,0BAM3E,SAAawC,GAAoB,IAAZxK,EAAW,uDAAJ,GAC1BuD,KAAKf,SAAS,CACZjD,MAAM,2BACDgE,KAAKZ,MAAMpD,OADX,kBAEFiL,EAFE,2BAGEjH,KAAKZ,MAAMpD,MAAMiL,IAHnB,IAIDrK,KAAK,GAAD,mBAAMoD,KAAKZ,MAAMpD,MAAMiL,GAAQrK,MAA/B,CAAqCH,Y,2BAMjD,YAA2D,IAA3CgL,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,OAAQ/J,EAAqB,EAArBA,YAAa+B,EAAQ,EAARA,KAEhD,GAAI+H,IAGFA,EAAYxC,cAAgByC,EAAOzC,aACnCwC,EAAY1K,QAAU2K,EAAO3K,OAF/B,CAKA,GAAY,SAAT2C,EAAiB,CAClB,IAAMiI,EAAO3H,KAAKZ,MAAMsG,UACxBiC,EAAKC,OAAOF,EAAO3K,MAAO,GAC1B4K,EAAKC,OAAOH,EAAY1K,MAAO,EAAGY,GAElCqC,KAAKf,SAAS,CAAEyG,UAAWiC,IAG7B,GAAY,SAATjI,EAAiB,CAAC,IAAD,EACZmI,EAAQ7H,KAAKZ,MAAMoG,MAAMkC,EAAOzC,aAChC6C,EAAM9H,KAAKZ,MAAMoG,MAAMiC,EAAYxC,aAEzC,GAAG4C,IAAUC,EAAK,CAChB,IAAMC,EAAaF,EAAMpC,QACzBsC,EAAWH,OAAOF,EAAO3K,MAAO,GAChCgL,EAAWH,OAAOH,EAAY1K,MAAO,EAAGY,GAExC,IAAMqK,EAAO,2BAAOH,GAAP,IAAcpC,QAASsC,IAC9BE,EAAQ,2BAAOjI,KAAKZ,OAAZ,gBAAmBoG,MAAM,eAAKxF,KAAKZ,MAAMoG,QAASwC,EAAQ9L,GAAK8L,IAG7E,YADAhI,KAAKf,SAASgJ,GAIhB,IAAMC,EAAeL,EAAMpC,QAC3ByC,EAAaN,OAAOF,EAAO3K,MAAO,GAClC,IAAMoL,EAAQ,2BACTN,GADS,IAEZpC,QAASyC,IAGLE,EAAaN,EAAIrC,QACvB2C,EAAWR,OAAOH,EAAY1K,MAAO,EAAGY,GACxC,IAAM0K,EAAM,2BACPP,GADO,IAEVrC,QAAS2C,IAGLH,EAAQ,2BACTjI,KAAKZ,OADI,IAEZoG,MAAM,2BACDxF,KAAKZ,MAAMoG,OADX,uBAEF2C,EAASjM,GAAKiM,GAFZ,cAGFE,EAAOnM,GAAKmM,GAHV,MAOPrI,KAAKf,SAASgJ,O,yBAIlB,WAAe,IAAD,OACNK,EAAatI,KAAKZ,MAAMsG,UAAU7I,KAAI,SAAC0L,EAAUxL,GACrD,IAAMyL,EAAW,EAAKpJ,MAAMoG,MAAM+C,GAE5BE,EADeD,EAAS/C,QACC5I,KAAI,SAAAX,GAAE,OAAI,EAAKkD,MAAMpD,MAAME,MAE1D,OACE,cAAC,EAAD,CAEAa,MAAOA,EACPb,GAAIsM,EAAStM,GACbuE,MAAO+H,EAAS/H,MAChBzE,MAAOyM,EACP3D,WAAY,EAAK1F,MAAM0G,aAAe0C,EAAStM,GAC/C6I,aAAc,EAAKyB,iBACnBjC,UAAW,EAAK4B,cAChB3B,aAAc,EAAK4B,iBACnBxC,aAAc,EAAKsC,iBACnBzC,WAAY,EAAK6C,eACjB3C,iBAAkB,EAAK0C,qBACvB3C,eAAgB,EAAK6C,mBACrB7D,WAAY,EAAKuB,eACjBxG,WAAY,EAAKsG,eACjBtB,SAAU,EAAK4B,aACfjC,YAAa,EAAKgC,iBAhBboE,EAAStM,OAqBlB,OACE,cAAC,IAAD,CACA+I,YAAY,cACZC,UAAY,aACZxF,KAAK,OAHL,SAKG,SAAA9B,GAAQ,OACT,6CACAlB,UAAU,cACVqB,IAAKH,EAASI,UACVJ,EAASuH,gBAHb,cAKGmD,EACA1K,EAASM,qB,2BAOlB,WACE,OAAG8B,KAAKZ,MAAMyG,gBAEV,cAAC,EAAD,CACAnG,KAAK,OACLU,WAAW,WACX5B,QAAQ,UACRN,YAAY,iCACZoB,cAAeU,KAAKgG,uBACpB3G,cAAeW,KAAKiG,gBAKpB,cAAC,EAAD,CACEvH,KAAM,cAAC,IAAD,IACNF,QAAQ,UACR/B,KAAK,iBACLgC,cAAeuB,KAAK+F,qB,oBAM5B,WACE,OACE,sBAAKrJ,UAAU,QAAf,UACE,cAAC,IAAD,CAAiBgM,UAAW1I,KAAKyG,cAAjC,SACGzG,KAAK2I,gBAEN3I,KAAK4I,uB,GA1YKvI,aCLLwI,EANA,kBACb,wBAAQnM,UAAU,aAAlB,SACE,iDCIWoM,EANA,kBACb,yBAAQpM,UAAU,aAAlB,gDACqC,mBAAGqM,KAAK,qEAAR,4BADrC,8B,MCeaC,MAVf,WACE,OACE,sBAAKtM,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCRNuM,IAASC,OAAO,cAAC,EAAD,IAAS/H,SAASgI,eAAe,W","file":"static/js/main.bc9a1f80.chunk.js","sourcesContent":["import shortid from 'shortid';\r\n\r\n/**\r\n * Get the next card number.\r\n * @param {object} cards - all the existing cards\r\n * @return {number} the next card number\r\n */\r\nexport const _getNextNumber = (cards = null) => {\r\n  let nextNumber = -1;\r\n  for (const id in cards) {\r\n    if (cards[id].number > nextNumber) {\r\n      nextNumber = cards[id].number;\r\n    }\r\n  }\r\n  return nextNumber + 1;\r\n};\r\n\r\n/**\r\n * Generate a unique identifier.\r\n * @return {string} unique ID\r\n */\r\nexport const _generateId = () => shortid.generate();","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Tag = (props) => {\r\n  if(!props.text) return null;\r\n  else {\r\n    return (\r\n      <span className=\"tag\">\r\n        {props.text}\r\n      </span>\r\n    )\r\n  }\r\n};\r\n\r\nTag.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Tag;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\n// Components\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport Tag from './Tag';\r\n\r\nconst Card = (props) => {\r\n  const tags = props.tags.map((tag, index)=> <Tag text={tag} key={`${tag}-${index}`}/>);\r\n\r\n  const cardRef = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    const cardRect = cardRef.current.getBoundingClientRect();\r\n    const cardPosition = {top: cardRect.top, left: cardRect.left};\r\n    props.onEditCard(props.id, props.description, props.tags, cardPosition);\r\n  }\r\n  \r\n  return (\r\n    <Draggable draggableId={props.id} index={props.index}>\r\n      {provided => \r\n      <li  \r\n      {...provided.draggableProps}\r\n      {...provided.dragHandleProps}\r\n      ref={provided.innerRef}\r\n      > \r\n        <div className=\"card\" ref={cardRef} onClick={handleClick}>\r\n          <div>{tags}</div>\r\n          <div>#{props.number} {props.description}</div>  \r\n        </div>\r\n        {provided.placeholder}\r\n      </li>\r\n      }\r\n    </Draggable>\r\n    \r\n  )\r\n};\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  description: PropTypes.string,\r\n  tags: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = (props) => {\r\n  const buttonClass = {\r\n    addList: 'add-button',\r\n    addCard: 'add-button add-card-button',\r\n    success: 'btn btn-success',\r\n    editor: 'btn btn-editor'\r\n  }\r\n\r\n  return(\r\n    <button \r\n    className={buttonClass[props.variant]}\r\n    onClick={props.onButtonClick}\r\n    >\r\n      {props.icon || ''}\r\n      <span>{props.text}</span>\r\n    </button>\r\n  )\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  icon: PropTypes.node,\r\n  onClick: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'editor', 'addList', 'addCard'])\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Icons\r\nimport { MdClose as CloseIcon } from \"react-icons/md\";\r\n// Components\r\nimport Button from './Button';\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Refs to access form and control input/textarea DOM nodes\r\n    this.formRef = React.createRef();\r\n    this.controlRef = React.createRef();\r\n\r\n    // TODO: Define your state properties here\r\n    this.state = {\r\n      value: this.props.value || '',\r\n      isSubmit: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.controlRef.current.focus();\r\n  }\r\n\r\n  handleOnChangeText = (event) => {\r\n    const isSubmit = event.target.value !== '';\r\n\r\n    this.setState({ \r\n      value: event.target.value,\r\n      isSubmit: isSubmit\r\n    })\r\n  }\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(!this.state.isSubmit) return;\r\n\r\n    this.props.onClickSubmit(this.state.value);\r\n    this.setState({ value: '' , isSubmit: false });\r\n    this.props.onClickCancel && this.props.onClickCancel();\r\n  }\r\n\r\n  handleOnKeyDown = (event) => {\r\n    if(event.keyCode === 13) this.handleOnSubmit(event);\r\n  }\r\n\r\n  renderFormControl = () => {\r\n    if(this.props.type === \"card\" || this.props.type === \"editor\") {\r\n      return (\r\n        <textarea \r\n        className=\"form-textarea\" \r\n        ref={this.controlRef}\r\n        placeholder={this.props.placeholder} \r\n        value={this.state.value}\r\n        onChange={this.handleOnChangeText}\r\n        >\r\n        </textarea>\r\n      )\r\n    }\r\n    else if(this.props.type === \"list\" || this.props.type === \"labels\") {\r\n      return (\r\n        <input \r\n        className=\"form-input\" \r\n        ref={this.controlRef}\r\n        placeholder={this.props.placeholder} \r\n        value={this.state.value}\r\n        onChange={this.handleOnChangeText}\r\n        />\r\n      )\r\n    } \r\n  }\r\n\r\n  // render the Form UI.\r\n  render() {\r\n    return (\r\n      <form\r\n        ref={this.formRef}\r\n        className={`form form-${this.props.type}`}\r\n        onSubmit={this.handleOnSubmit}\r\n        onKeyDown={this.handleOnKeyDown}\r\n      >\r\n        {this.renderFormControl()}\r\n        <div className=\"form-actions\">\r\n          <Button\r\n          variant={this.props.variant}\r\n          text={this.props.buttonText}\r\n          onButtonClick={this.handleOnSubmit}\r\n          />\r\n          {this.props.onClickCancel &&\r\n          <CloseIcon \r\n          className=\"form-cancel-action\"\r\n          onClick={this.props.onClickCancel}\r\n          />\r\n          }\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nForm.defaultProps = {\r\n  initialValue: '',\r\n  placeholder: '',\r\n  buttonText: '',\r\n  onClickSubmit: () => null,\r\n  onClickCancel: () => null\r\n};\r\n\r\nForm.propTypes = {\r\n  type: PropTypes.oneOf(['list', 'card', 'editor', 'labels']).isRequired,\r\n  initialValue: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n  onClickSubmit: PropTypes.func,\r\n  onClickCancel: PropTypes.func\r\n};\r\n\r\nexport default Form;\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useClickOutsideEffect } from '../hooks';\r\n\r\nconst Popover = ({ title = '', children = null, onClickOutside = () => null, offset = {}}) => {\r\n  const popover = useRef(null);\r\n\r\n  useClickOutsideEffect(popover, onClickOutside);\r\n\r\n  return (\r\n    <div\r\n      ref={popover}\r\n      className=\"popover\"\r\n      style={{\r\n        marginTop: `${offset?.top ?? 0}px`,\r\n        marginLeft: `${offset?.left ?? 0}px`\r\n      }}\r\n    >\r\n      {\r\n        title ? (\r\n          <>\r\n            <div className=\"popover-header\">\r\n              <h4>{title}</h4>\r\n            </div>\r\n            <hr className=\"divider\" />\r\n          </>\r\n        ) : null\r\n      }\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nPopover.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]),\r\n  onClickOutside: PropTypes.func,\r\n  offset: PropTypes.exact({\r\n    top: PropTypes.number,\r\n    left: PropTypes.number\r\n  })\r\n};\r\n\r\nexport default Popover;\r\n","import { useEffect, useCallback } from 'react';\r\n\r\nexport function useClickOutsideEffect(node, onClickOutside) {\r\n  const handleClick = useCallback((e) => {\r\n    if (!node?.current?.contains(e.target) && typeof(onClickOutside) === \"function\") {\r\n      onClickOutside();\r\n    }\r\n  }, [node, onClickOutside]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClick);\r\n    };\r\n  }, [handleClick]);\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Icons\r\nimport { \r\n  IoMdCopy as CopyIcon, \r\n  IoMdArchive as ArchiveIcon,\r\n  IoMdCreate as EditIcon,\r\n  IoMdClose as RemoveIcon  \r\n} from 'react-icons/io';\r\n// Components\r\nimport Button from './Button';\r\nimport Form from './Form';\r\nimport Popover from './Popover';\r\n\r\nclass CardEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // TODO: Define your state properties here\r\n    this.state = {\r\n      isTagEditOpen: false,\r\n      isCloseEditor: true\r\n    }\r\n\r\n    this.handleOpenTagsEdit = this.handleOpenTagsEdit.bind(this);\r\n    this.handleCloseTagsEdit = this.handleCloseTagsEdit.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n\r\n  handleOpenTagsEdit() {\r\n    this.setState({\r\n      isTagEditOpen: true,\r\n      isCloseEditor: false\r\n    })\r\n  }\r\n\r\n  handleCloseTagsEdit() {\r\n    this.setState({\r\n      isTagEditOpen: false,\r\n      isCloseEditor: false\r\n    })\r\n  }\r\n\r\n  handleClickOutside(e) {\r\n    if(!e.target.closest('.editor-area') && this.state.isCloseEditor) this.props.onCancelEdit();\r\n    this.setState({isCloseEditor: true});\r\n  }\r\n\r\n  // TODO: render the CardEditor UI.\r\n  render() {\r\n    const labels = this.props.tags.map((tag, index) => (\r\n      <li \r\n      className=\"label\" \r\n      key={`${tag}${index}`} \r\n      onClick={() => this.props.onRemoveTag(index)}\r\n      >\r\n        <RemoveIcon />\r\n        <p>{tag}</p>\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div className=\"editor-modal\" onClick={this.handleClickOutside}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            position: \"absolute\",\r\n            top: `${this.props?.position?.top ?? 0}px`,\r\n            left: `${this.props?.position?.left ?? 0}px`\r\n          }}\r\n\r\n          className=\"editor-area\"\r\n        >\r\n          <div \r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          }}\r\n          >\r\n            { /* render editor form */ }\r\n            <Form \r\n              type=\"editor\"\r\n              buttonText=\"Save\"\r\n              variant=\"success\"\r\n              value={this.props.text}\r\n              onClickCancel={null}\r\n              onClickSubmit={this.props.onSaveCard}\r\n            />\r\n          </div>\r\n          { /* render editor actions */ }\r\n          <ul className=\"editor-actions\">\r\n            <li className=\"editor-action\">\r\n              <Button \r\n                variant='editor' \r\n                icon={<EditIcon/>}\r\n                text= 'Edit Labels'\r\n                onButtonClick={this.handleOpenTagsEdit}\r\n              />\r\n              { /* render tags editing form */ }\r\n              {\r\n                this.state.isTagEditOpen &&\r\n                <Popover \r\n                  title='Labels'\r\n                  onClickOutside={this.handleCloseTagsEdit}\r\n                  offset={{top: -35, left: 0}}\r\n                >\r\n                  {/* {actions} */}\r\n                  <ul className=\"labels\">\r\n                    {labels}\r\n                  </ul>\r\n                  <h4 className=\"new-label-title\">Add a new label</h4>\r\n                  <Form \r\n                    type=\"labels\"\r\n                    buttonText=\"Add\"\r\n                    variant=\"success\"\r\n                    placeholder='Enter a name for this label...'\r\n                    onClickSubmit={this.props.onAddTag}\r\n                    onClickCancel={null}\r\n                  />\r\n                </Popover>\r\n              }\r\n            </li>\r\n            <li className=\"editor-action\">\r\n              <Button \r\n                variant='editor' \r\n                icon={<CopyIcon/>}\r\n                text= 'Copy'\r\n                onButtonClick={this.props.onCopyCard}\r\n              />\r\n            </li>\r\n            <li className=\"editor-action\">\r\n              <Button \r\n                variant='editor' \r\n                icon={<ArchiveIcon/>}\r\n                text= 'Archive'\r\n                onButtonClick={this.props.onArchiveCard}\r\n              />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nCardEditor.defaultProps = {\r\n  initialValue: '',\r\n  tags: [],\r\n  position: null,\r\n  onSaveCard: () => null,\r\n  onRemoveTag: () => null,\r\n  onAddTag: () => null,\r\n  onCopyCard: () => null,\r\n  onArchiveCard: () => null\r\n};\r\n\r\nCardEditor.propTypes = {\r\n  initialValue: PropTypes.string,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n  position: PropTypes.exact({\r\n    top: PropTypes.number,\r\n    left: PropTypes.number\r\n  }),\r\n  onSaveCard: PropTypes.func,\r\n  onRemoveTag: PropTypes.func,\r\n  onAddTag: PropTypes.func,\r\n  onCopyCard: PropTypes.func,\r\n  onArchiveCard: PropTypes.func\r\n};\r\n\r\nexport default CardEditor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Icons\r\nimport { MdMoreHoriz as MenuIcon } from \"react-icons/md\";\r\n// Components\r\nimport Popover from './Popover';\r\n\r\nconst Menu = (props) => {\r\n  const actions = props.actions.map((actionsGroup, index) => {\r\n    return (\r\n      <div key={index}>\r\n          <ul className=\"menu-actions\">\r\n            {actionsGroup.map(action => (\r\n              <li \r\n              className=\"menu-action\" \r\n              key={action.title}\r\n              onClick={action.onClick}\r\n              > \r\n                <p>{action.title}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <hr className=\"divider\"></hr>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const toggleMenu = () => {\r\n    props.onClick(props.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <MenuIcon \r\n        onClick={toggleMenu}\r\n      />      \r\n      {\r\n        props.isOpen ? (\r\n          <>\r\n            <Popover \r\n            title='List Actions'\r\n            onClickOutside={toggleMenu}\r\n            >\r\n              {actions}\r\n            </Popover>\r\n          </>\r\n        ) : null\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nMenu.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  actions: PropTypes.arrayOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        onClick: PropTypes.func,\r\n        title: PropTypes.string.isRequired\r\n      })\r\n    )\r\n  )\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Icons\r\nimport { MdAdd as AddIcon } from 'react-icons/md';\r\n// Components\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Card from './Card';\r\nimport CardEditor from './CardEditor';\r\nimport Menu from './Menu';\r\nimport Form from './Form';\r\nimport Button from './Button';\r\n\r\nclass CardsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // CardsList state\r\n    this.state = { \r\n      creatingNewCard: false,\r\n      editCardId: null,\r\n      editCardText: '',\r\n      editCardTags: [],\r\n      editorPosition: {top: null, left: null}\r\n    };\r\n\r\n    // Define all the card actions here\r\n    this.actions = [\r\n      [\r\n        { \r\n          title: 'Add Card...',\r\n          onClick: () => {this.handleCreateNewCard()} // TODO\r\n        },\r\n        { \r\n          title: 'Copy List...',\r\n          onClick: () => {this.props.onCopyList(this.props.id)}// TODO\r\n        }\r\n      ],\r\n      [\r\n        {\r\n          title: 'Move All Cards in This List...',\r\n          onClick: () => {this.props.onMoveAllCards(this.props.id)} // TODO\r\n        },\r\n        {\r\n          title: 'Archive All Cards in This List...',\r\n          onClick: () => {this.props.onRemoveAllCards(this.props.id)} // TODO\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          title: 'Archive This List',\r\n          onClick: () => {this.props.onRemoveList(this.props.id)} // TODO\r\n        }\r\n      ]\r\n    ];\r\n\r\n    this.handleAddNewCard = this.handleAddNewCard.bind(this);\r\n    this.handleCancelNewCard = this.handleCancelNewCard.bind(this);\r\n    this.handleCreateNewCard = this.handleCreateNewCard.bind(this);\r\n    this.handleEditCard = this.handleEditCard.bind(this);\r\n    this.handleCancelEdit = this.handleCancelEdit.bind(this);\r\n    this.handleCopyCard = this.handleCopyCard.bind(this);\r\n    this.handleArchiveCard = this.handleArchiveCard.bind(this);\r\n    this.handleSaveCard = this.handleSaveCard.bind(this);\r\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\r\n    this.handleAddTag = this.handleAddTag.bind(this);\r\n  }\r\n\r\n  handleAddNewCard(cardText = '') {\r\n    this.props.onAddCard(this.props.id, cardText);\r\n    this.setState({ creatingNewCard: false });\r\n  }\r\n\r\n  handleCancelNewCard() {\r\n    this.setState({ creatingNewCard: false });\r\n  }\r\n\r\n  handleCreateNewCard() {\r\n    this.setState({ creatingNewCard: true });\r\n  }\r\n\r\n  handleEditCard(id, text, tags, position) {\r\n    this.setState({\r\n      editCardId: id,\r\n      editCardText: text,\r\n      editCardTags: tags,\r\n      editorPosition: position\r\n    })\r\n  }\r\n\r\n  handleCancelEdit() {\r\n    this.setState({\r\n      editCardId: null,\r\n      editCardText: '',\r\n      editCardTags: []\r\n    })\r\n  }\r\n\r\n  handleCopyCard() {\r\n    this.props.onCopyCard(this.props.id, this.state.editCardId);\r\n    this.setState({editCardId: null});\r\n  }\r\n\r\n  handleArchiveCard() {\r\n    this.props.onRemoveCard(this.props.id, this.state.editCardId);\r\n    this.handleCancelEdit();\r\n  }\r\n\r\n  handleSaveCard(text) {\r\n    this.props.onEditCard(this.state.editCardId, text);\r\n    this.setState({editCardId: null});\r\n  }\r\n\r\n  handleRemoveTag(tagId) {\r\n    this.props.onRemoveTag(this.state.editCardId, tagId);\r\n    this.setState({\r\n      editCardTags: this.state.editCardTags.filter((_, index) => index !== tagId)\r\n    })\r\n  }\r\n  \r\n  handleAddTag(text) {\r\n    this.setState({ editCardTags: [...this.state.editCardTags, text]});\r\n    this.props.onAddTag(this.state.editCardId, text);\r\n  }\r\n\r\n  renderHeader() {\r\n    const numberOfCards = this.props.cards.length;\r\n\r\n    return (\r\n      <div className=\"cards-list-header\">\r\n        <div className=\"cards-list-title\">\r\n          { /* render the list title */ }\r\n          <h3>{this.props.title}</h3>\r\n          { /* render the Menu component */ }\r\n          <Menu \r\n          id={this.props.id}\r\n          actions={this.actions}\r\n          isOpen={this.props.isMenuOpen}\r\n          onClick={this.props.onToggleMenu}\r\n          />\r\n        </div>\r\n        { /* render the number of cards in this list */ }\r\n        <p>{numberOfCards} {numberOfCards === 1 ? 'card' : 'cards'}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCards() {\r\n    const cards = this.props.cards.map((card, index) => {\r\n      return (\r\n        <Card \r\n        key={card.id}\r\n        id={card.id}\r\n        index={index}\r\n        number={card.number}\r\n        description={card.description}\r\n        tags={card.tags}\r\n        onEditCard={this.handleEditCard}\r\n        />\r\n      )  \r\n    })\r\n    return (\r\n      <Droppable\r\n      droppableId={this.props.id}\r\n      direction= \"vertical\"\r\n      type= \"card\"\r\n      >\r\n        {provided => \r\n        <ul className=\"cards\"\r\n        ref={provided.innerRef}\r\n        {...provided.droppableProps}\r\n        >\r\n          {cards}\r\n          {provided.placeholder}\r\n        </ul>\r\n        }\r\n      </Droppable>\r\n      \r\n    );\r\n  }\r\n\r\n  renderFooter() {\r\n    if(this.state.creatingNewCard) {\r\n      return (\r\n        <Form \r\n        type=\"card\"\r\n        buttonText=\"Add Card\"\r\n        variant=\"success\"\r\n        placeholder=\"Enter a title for this card\"\r\n        onClickCancel={this.handleCancelNewCard}\r\n        onClickSubmit={this.handleAddNewCard}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Button \r\n          icon={<AddIcon />}\r\n          variant=\"addCard\"\r\n          text=\"Add a new card\"\r\n          onButtonClick={this.handleCreateNewCard}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {   \r\n    return (\r\n      <Draggable draggableId={this.props.id} index={this.props.index}>\r\n        {(provided) => \r\n        <li \r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        ref={provided.innerRef}\r\n        >\r\n          <div className=\"cards-list\">\r\n            { this.renderHeader() }\r\n            { this.renderCards() }\r\n            { this.renderFooter() }\r\n            { /* render card editor */ }\r\n            { this.state.editCardId && \r\n            <CardEditor \r\n            text={this.state.editCardText}\r\n            tags={this.state.editCardTags}\r\n            position={this.state.editorPosition}\r\n            onCancelEdit={this.handleCancelEdit}\r\n            onArchiveCard={this.handleArchiveCard}\r\n            onCopyCard={this.handleCopyCard}\r\n            onSaveCard={this.handleSaveCard}\r\n            onAddTag={this.handleAddTag}\r\n            onRemoveTag={this.handleRemoveTag}\r\n            />\r\n            }\r\n          </div>\r\n          {provided.placeholder}\r\n        </li>\r\n        }\r\n        \r\n      </Draggable>\r\n    );\r\n  }\r\n};\r\n\r\nCardsList.defaultProps = {\r\n  cards: null,\r\n  isMenuOpen: false,\r\n  onToggleMenu: () => null,\r\n  onAddCard: () => null,\r\n  onRemoveCard: () => null,\r\n  onRemoveList: () => null,\r\n  onRemoveAllCards: () => null,\r\n  onCopyList: () => null,\r\n  onMoveAllCards: () => null,\r\n  onCopyCard: () => null,\r\n  onEditCard: () => null,\r\n  onRemoveTag: () => null,\r\n  onAddTag: () => null\r\n};\r\n\r\nCardsList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n      description: PropTypes.string,\r\n      tags: PropTypes.arrayOf(PropTypes.string)\r\n    })\r\n  ),\r\n  isMenuOpen: PropTypes.bool,\r\n  onToggleMenu: PropTypes.func,\r\n  onAddCard: PropTypes.func,\r\n  onRemoveCard: PropTypes.func,\r\n  onRemoveList: PropTypes.func,\r\n  onRemoveAllCards: PropTypes.func,\r\n  onCopyList: PropTypes.func,\r\n  onMoveAllCards: PropTypes.func,\r\n  onCopyCard: PropTypes.func,\r\n  onEditCard: PropTypes.func,\r\n  onRemoveTag: PropTypes.func,\r\n  onAddTag: PropTypes.func\r\n};\r\n\r\nexport default CardsList;\r\n","const data = {\r\n  cards: {\r\n    \"k9atfadyp\": { \r\n      id: \"k9atfadyp\", \r\n      number: 1, \r\n      description: \"Create reusable React components\", \r\n      tags: [\"Priority: Medium\", \"React\"] \r\n    },\r\n    \"8wu6w8mxg\": { \r\n      id: \"8wu6w8mxg\", \r\n      number: 2, \r\n      description: \"Learn React Hooks\", \r\n      tags: [\"React\", \"Hooks\"] \r\n    },\r\n    \"c96h9478v\": { \r\n      id: \"c96h9478v\", \r\n      number: 3, \r\n      description: \"Create Beautiful Drag and Drop Capability\", \r\n      tags: [\"Priority: Low\", \"react-beautiful-dnd\"]\r\n    },\r\n    \"rtwf8u120\": { \r\n      id: \"rtwf8u120\", \r\n      number: 4,\r\n      description: \"Learn React\", \r\n      tags: [\"Priority: High\", \"React\"] \r\n    },\r\n    \"vt6udjrpz\": { \r\n      id: \"vt6udjrpz\", \r\n      number: 5, \r\n      description: \"Write my first React component\", \r\n      tags: [\"Priority: Medium\"] \r\n    },\r\n    \"ftrch98nt\": { \r\n      id: \"ftrch98nt\", \r\n      number: 6, \r\n      description: \"Create React App\", \r\n      tags: [\"Priority: Medium\", \"create-react-app\"] \r\n    },\r\n    \"bionb64f7\": { \r\n      id: \"bionb64f7\", \r\n      number: 7, \r\n      description: \"Write my first React component\", \r\n      tags: [\"Priority: Medium\"] \r\n    }\r\n  },\r\n  lists: {\r\n    \"f0y88ej8u\": { \r\n      id: \"f0y88ej8u\",\r\n      title: \"Product Backlog\",\r\n      cardIds: [\"k9atfadyp\", \"8wu6w8mxg\", \"c96h9478v\"]\r\n    },\r\n    \"1528b8oyp\": {\r\n      id: \"1528b8oyp\",\r\n      title: \"Work In Progress\",\r\n      cardIds: [\"rtwf8u120\", \"vt6udjrpz\"]\r\n    },\r\n    \"yu0myoowp\": {\r\n      id: \"yu0myoowp\",\r\n      title: \"Done\",\r\n      cardIds: [\"ftrch98nt\", \"bionb64f7\"]\r\n    }\r\n  },\r\n  listOrder: [\"f0y88ej8u\", \"1528b8oyp\", \"yu0myoowp\"]\r\n};\r\n\r\nexport default data;\r\n","import React, { Component } from 'react';\r\nimport update from 'react-addons-update';\r\nimport { _getNextNumber, _generateId } from '../utils';\r\n// Icons\r\nimport { MdAdd as AddIcon } from 'react-icons/md';\r\n// Components\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport CardsList from './CardsList';\r\nimport Form from './Form';\r\n\r\nimport data from '../data';\r\nimport Button from './Button';\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lists: {},\r\n      cards: {},\r\n      listOrder: [],\r\n      newListText: '',\r\n      creatingNewList: false,\r\n      openMenuId: null,\r\n    };\r\n\r\n    this.cardRef = React.createRef();\r\n\r\n    this.handleCreateList = this.handleCreateList.bind(this);\r\n    this.handleCancelCreateList = this.handleCancelCreateList.bind(this);\r\n    this.handleAddList = this.handleAddList.bind(this);\r\n    this.handleRemoveList = this.handleRemoveList.bind(this);\r\n    this.handleAddCard = this.handleAddCard.bind(this);\r\n    this.handleRemoveCard = this.handleRemoveCard.bind(this);\r\n    this.handleRemoveAllCards = this.handleRemoveAllCards.bind(this);\r\n    this.handleCopyCard = this.handleCopyCard.bind(this);\r\n    this.handleCopyList = this.handleCopyList.bind(this);\r\n    this.handleMoveAllCards = this.handleMoveAllCards.bind(this);\r\n    this.handleToggleMenu = this.handleToggleMenu.bind(this);\r\n    this.handleEditCard = this.handleEditCard.bind(this);\r\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\r\n    this.handleAddTag = this.handleAddTag.bind(this);\r\n    this.handleDragEnd = this.handleDragEnd.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState ({ \r\n      lists: data.lists,\r\n      cards: data.cards,\r\n      listOrder: data.listOrder\r\n    })\r\n  }\r\n\r\n  handleCreateList() {\r\n    this.setState({ creatingNewList: true })\r\n  }\r\n\r\n  handleCancelCreateList() {\r\n    this.setState({ creatingNewList: false });\r\n  }\r\n\r\n  handleAddList(title = '') {\r\n    if(!title) return;\r\n\r\n    const newListID = _generateId();\r\n\r\n    this.setState({\r\n      lists: {\r\n        ...this.state.lists, \r\n        [newListID]: {\r\n          id: newListID, \r\n          title: title,\r\n          cardIds: []\r\n        }\r\n      },\r\n      listOrder: [...this.state.listOrder, newListID],\r\n      newListText: '',\r\n      creatingNewList: false,\r\n    })\r\n  }\r\n\r\n  handleRemoveList(listId) {\r\n    const updateCards = Object.assign({}, this.state.cards);\r\n    const updateLists = Object.assign({}, this.state.lists);\r\n\r\n    // - Delete all cards from the list\r\n    this.state.lists[listId].cardIds.forEach(cardId => delete updateCards[cardId]);\r\n    // - Delete list itself\r\n    delete updateLists[listId];\r\n\r\n    this.setState({\r\n      lists: updateLists,\r\n      cards: updateCards,\r\n      listOrder: this.state.listOrder.filter(listOr => listOr !== listId)\r\n    })\r\n  }\r\n\r\n  handleAddCard(listId, description = ''){\r\n    if(!description) return;\r\n\r\n    const newCardID = _generateId();\r\n\r\n    this.setState({\r\n      lists: {\r\n        ...this.state.lists,\r\n        [listId]: {\r\n          ...this.state.lists[listId],\r\n          cardIds: [...this.state.lists[listId].cardIds, newCardID]\r\n        }\r\n      },\r\n      cards: {\r\n        ...this.state.cards, \r\n        [newCardID]: {\r\n          id: newCardID,\r\n          number: _getNextNumber(this.state.cards),\r\n          description: description,\r\n          tags: []\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  handleRemoveCard(listId, cardId) {\r\n    // - Delete card\r\n    const updateCards = Object.assign({}, this.state.cards);\r\n    delete updateCards[cardId];\r\n\r\n    // - Remove card Id from the corresponding list\r\n    this.setState({\r\n      lists: {\r\n        ...this.state.lists,\r\n        [listId]: {\r\n          ...this.state.lists[listId],\r\n          cardIds: this.state.lists[listId].cardIds.filter(card => card !== cardId)\r\n        }\r\n      },\r\n      cards: updateCards,\r\n    })\r\n  }\r\n\r\n  handleRemoveAllCards(listId) {\r\n    const updateCards = Object.assign({}, this.state.cards);\r\n    this.state.lists[listId].cardIds.forEach(cardId => delete updateCards[cardId]);\r\n\r\n    this.setState({\r\n      lists: {\r\n        ...this.state.lists,\r\n        [listId]: {\r\n          ...this.state.lists[listId],\r\n          cardIds: []\r\n        }\r\n      },\r\n      cards: updateCards,\r\n      openMenuId: null\r\n    })\r\n\r\n  }\r\n\r\n  handleCopyCard(listId, cardId) {\r\n    const newCardId = _generateId();\r\n\r\n    this.setState({\r\n      lists: {\r\n        ...this.state.lists,\r\n        [listId]: {\r\n          ...this.state.lists[listId],\r\n          cardIds: [...this.state.lists[listId].cardIds, newCardId]\r\n        }\r\n      },\r\n      cards: {\r\n        ...this.state.cards, \r\n        [newCardId]: {\r\n          ...this.state.cards[cardId],\r\n          id: newCardId,\r\n          number: _getNextNumber(this.state.cards)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  \r\n  handleCopyList(listId) {\r\n    // - Copy all cards from list to clone\r\n    const [cloneCards] = this.state.lists[listId].cardIds.map(cardId => {\r\n      const cloneCardId = _generateId();\r\n      // cloneCards[cloneCardId] = Object.assign({}, this.state.cards[cardId]);\r\n      // cloneCards[cloneCardId].id = cloneCardId;\r\n      // cloneCards[cloneCardId].number = _getNextNumber({...this.state.cards, ...cloneCards});\r\n      return {[cloneCardId]: {\r\n        ...this.state.cards[cardId],\r\n        id: cloneCardId,\r\n        number: _getNextNumber(this.state.cards)\r\n      }}\r\n    })\r\n\r\n    // - Create a new list and add all the cloned cards\r\n    const newListId = _generateId();\r\n\r\n    this.setState({\r\n      lists: {\r\n        ...this.state.lists, \r\n        [newListId]: {\r\n          ...this.state.lists[listId],\r\n          id: newListId,\r\n          title: `(Copy) ${this.state.lists[listId].title}`,\r\n          cardIds: Object.keys(cloneCards),\r\n        }\r\n      },\r\n      cards: {...this.state.cards, ...cloneCards},\r\n      listOrder: [...this.state.listOrder, newListId],\r\n      openMenuId: null\r\n    })\r\n  }\r\n\r\n  handleMoveAllCards(listId) {\r\n    const updateLists = Object.assign({}, this.state.lists);\r\n\r\n    for (const id in updateLists) {\r\n      if (id === listId) updateLists[id].cardIds = Object.keys(this.state.cards);\r\n      else updateLists[id].cardIds = [];\r\n    }\r\n\r\n    this.setState({\r\n      lists: updateLists,\r\n      openMenuId: null\r\n    })\r\n  }\r\n\r\n  handleToggleMenu(listId) {\r\n    if(this.state.openMenuId !== listId) this.setState({ openMenuId: listId });\r\n    if(this.state.openMenuId === listId) this.setState({ openMenuId: null });\r\n  }\r\n\r\n  handleEditCard(cardId, description = '') {\r\n    this.setState({ \r\n      cards: {\r\n        ...this.state.cards,\r\n        [cardId]: {\r\n          ...this.state.cards[cardId],\r\n          description: description\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  handleRemoveTag(cardId, tagId) {\r\n    this.setState({\r\n      cards: {\r\n        ...this.state.cards,\r\n        [cardId]: {\r\n          ...this.state.cards[cardId],\r\n          tags: this.state.cards[cardId].tags.filter((_, index) => index !== tagId)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  handleAddTag(cardId, text = '') {\r\n    this.setState({\r\n      cards: {\r\n        ...this.state.cards,\r\n        [cardId]: {\r\n          ...this.state.cards[cardId],\r\n          tags: [...this.state.cards[cardId].tags, text]\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  handleDragEnd({ destination, source, draggableId, type }) {\r\n    // - Check if the element has been dropped inside the droppable context (using destination). If not, ignore droppping\r\n    if(!destination) return;\r\n    // - Check if the element has been dropped in a new location (using droppableId from destination and source). If not, ignore droppping\r\n    if(\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) return;\r\n\r\n    if(type === 'list') {\r\n      const list = this.state.listOrder;\r\n      list.splice(source.index, 1);\r\n      list.splice(destination.index, 0, draggableId);\r\n\r\n      this.setState({ listOrder: list });\r\n    } \r\n\r\n    if(type === 'card') {\r\n      const start = this.state.lists[source.droppableId];\r\n      const end = this.state.lists[destination.droppableId];\r\n\r\n      if(start === end) {\r\n        const newCardIds = start.cardIds;\r\n        newCardIds.splice(source.index, 1);\r\n        newCardIds.splice(destination.index, 0, draggableId);\r\n  \r\n        const newList = {...start, cardIds: newCardIds}\r\n        const newState = {...this.state, lists: {...this.state.lists}, [newList.id]: newList}\r\n  \r\n        this.setState(newState);\r\n        return;\r\n      }\r\n\r\n      const startCardIds = start.cardIds;\r\n      startCardIds.splice(source.index, 1);\r\n      const newStart = {\r\n        ...start, \r\n        cardIds: startCardIds\r\n      }\r\n\r\n      const endCardIds = end.cardIds;\r\n      endCardIds.splice(destination.index, 0, draggableId);\r\n      const newEnd = {\r\n        ...end, \r\n        cardIds: endCardIds\r\n      }\r\n      \r\n      const newState = {\r\n        ...this.state,\r\n        lists: {\r\n          ...this.state.lists,\r\n          [newStart.id]: newStart,\r\n          [newEnd.id]: newEnd\r\n        }\r\n      }\r\n\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  renderLists() {\r\n    const cardsLists = this.state.listOrder.map((cardList, index) => {\r\n      const listData = this.state.lists[cardList];\r\n      const listCardsIds = listData.cardIds;\r\n      const listCards = listCardsIds.map(id => this.state.cards[id])\r\n\r\n      return (\r\n        <CardsList\r\n        key={listData.id}\r\n        index={index}\r\n        id={listData.id}\r\n        title={listData.title}\r\n        cards={listCards}\r\n        isMenuOpen={this.state.openMenuId === listData.id}\r\n        onToggleMenu={this.handleToggleMenu}\r\n        onAddCard={this.handleAddCard}\r\n        onRemoveCard={this.handleRemoveCard}\r\n        onRemoveList={this.handleRemoveList}\r\n        onCopyList={this.handleCopyList}\r\n        onRemoveAllCards={this.handleRemoveAllCards}\r\n        onMoveAllCards={this.handleMoveAllCards}\r\n        onCopyCard={this.handleCopyCard}\r\n        onEditCard={this.handleEditCard}\r\n        onAddTag={this.handleAddTag}\r\n        onRemoveTag={this.handleRemoveTag}\r\n        />\r\n      )\r\n    })\r\n\r\n    return (\r\n      <Droppable \r\n      droppableId='droppable-1'\r\n      direction = 'horizontal'\r\n      type=\"list\"\r\n      >\r\n        {provided => \r\n        <ul \r\n        className=\"board-lists\"\r\n        ref={provided.innerRef}\r\n        {...provided.droppableProps}\r\n        >\r\n          {cardsLists}\r\n          {provided.placeholder}\r\n        </ul>\r\n        }\r\n      </Droppable>\r\n    );\r\n  }\r\n\r\n  renderNewList() {\r\n    if(this.state.creatingNewList) {\r\n      return (\r\n        <Form\r\n        type=\"list\"\r\n        buttonText=\"Add List\"\r\n        variant=\"success\"\r\n        placeholder=\"Enter a title for this list...\"\r\n        onClickCancel={this.handleCancelCreateList}\r\n        onClickSubmit={this.handleAddList}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Button \r\n          icon={<AddIcon />}\r\n          variant=\"addList\"\r\n          text=\"Add a new list\"\r\n          onButtonClick={this.handleCreateList}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        <DragDropContext onDragEnd={this.handleDragEnd}>\r\n          {this.renderLists()}\r\n        </DragDropContext>\r\n        { this.renderNewList() }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <header className=\"app-header\">\r\n    <h1>React Trello</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"app-footer\">\r\n    Looking for help? Head over to the <a href=\"https://discord.com/channels/742753758450155662/748890194136137838\">Discord server</a> and ask the community.\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n// Components\r\nimport Board from './components/Board';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n// Stylesheets\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Board />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}